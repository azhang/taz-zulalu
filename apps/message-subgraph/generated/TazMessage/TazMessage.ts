// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { ethereum, JSONValue, TypedMap, Entity, Bytes, Address, BigInt } from "@graphprotocol/graph-ts"

export class MemberAdded extends ethereum.Event {
    get params(): MemberAdded__Params {
        return new MemberAdded__Params(this)
    }
}

export class MemberAdded__Params {
    _event: MemberAdded

    constructor(event: MemberAdded) {
        this._event = event
    }

    get groupId(): BigInt {
        return this._event.parameters[0].value.toBigInt()
    }

    get identityCommitment(): BigInt {
        return this._event.parameters[1].value.toBigInt()
    }
}

export class MessageAdded extends ethereum.Event {
    get params(): MessageAdded__Params {
        return new MessageAdded__Params(this)
    }
}

export class MessageAdded__Params {
    _event: MessageAdded

    constructor(event: MessageAdded) {
        this._event = event
    }

    get parentMessageId(): BigInt {
        return this._event.parameters[0].value.toBigInt()
    }

    get messageId(): BigInt {
        return this._event.parameters[1].value.toBigInt()
    }

    get messageContent(): string {
        return this._event.parameters[2].value.toString()
    }
}

export class RoleAdminChanged extends ethereum.Event {
    get params(): RoleAdminChanged__Params {
        return new RoleAdminChanged__Params(this)
    }
}

export class RoleAdminChanged__Params {
    _event: RoleAdminChanged

    constructor(event: RoleAdminChanged) {
        this._event = event
    }

    get role(): Bytes {
        return this._event.parameters[0].value.toBytes()
    }

    get previousAdminRole(): Bytes {
        return this._event.parameters[1].value.toBytes()
    }

    get newAdminRole(): Bytes {
        return this._event.parameters[2].value.toBytes()
    }
}

export class RoleGranted extends ethereum.Event {
    get params(): RoleGranted__Params {
        return new RoleGranted__Params(this)
    }
}

export class RoleGranted__Params {
    _event: RoleGranted

    constructor(event: RoleGranted) {
        this._event = event
    }

    get role(): Bytes {
        return this._event.parameters[0].value.toBytes()
    }

    get account(): Address {
        return this._event.parameters[1].value.toAddress()
    }

    get sender(): Address {
        return this._event.parameters[2].value.toAddress()
    }
}

export class RoleRevoked extends ethereum.Event {
    get params(): RoleRevoked__Params {
        return new RoleRevoked__Params(this)
    }
}

export class RoleRevoked__Params {
    _event: RoleRevoked

    constructor(event: RoleRevoked) {
        this._event = event
    }

    get role(): Bytes {
        return this._event.parameters[0].value.toBytes()
    }

    get account(): Address {
        return this._event.parameters[1].value.toAddress()
    }

    get sender(): Address {
        return this._event.parameters[2].value.toAddress()
    }
}

export class ViolationAdded extends ethereum.Event {
    get params(): ViolationAdded__Params {
        return new ViolationAdded__Params(this)
    }
}

export class ViolationAdded__Params {
    _event: ViolationAdded

    constructor(event: ViolationAdded) {
        this._event = event
    }

    get messageId(): BigInt {
        return this._event.parameters[0].value.toBigInt()
    }

    get reviewer(): Address {
        return this._event.parameters[1].value.toAddress()
    }
}

export class TazMessage extends ethereum.SmartContract {
    static bind(address: Address): TazMessage {
        return new TazMessage("TazMessage", address)
    }

    DEFAULT_ADMIN_ROLE(): Bytes {
        let result = super.call("DEFAULT_ADMIN_ROLE", "DEFAULT_ADMIN_ROLE():(bytes32)", [])

        return result[0].toBytes()
    }

    try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
        let result = super.tryCall("DEFAULT_ADMIN_ROLE", "DEFAULT_ADMIN_ROLE():(bytes32)", [])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBytes())
    }

    REVIEWER_ROLE(): Bytes {
        let result = super.call("REVIEWER_ROLE", "REVIEWER_ROLE():(bytes32)", [])

        return result[0].toBytes()
    }

    try_REVIEWER_ROLE(): ethereum.CallResult<Bytes> {
        let result = super.tryCall("REVIEWER_ROLE", "REVIEWER_ROLE():(bytes32)", [])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBytes())
    }

    TAZ_ADMIN_ROLE(): Bytes {
        let result = super.call("TAZ_ADMIN_ROLE", "TAZ_ADMIN_ROLE():(bytes32)", [])

        return result[0].toBytes()
    }

    try_TAZ_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
        let result = super.tryCall("TAZ_ADMIN_ROLE", "TAZ_ADMIN_ROLE():(bytes32)", [])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBytes())
    }

    addMessage(
        messageContent: string,
        groupId: BigInt,
        merkleTreeRoot: BigInt,
        signal: Bytes,
        nullifierHash: BigInt,
        externalNullifier: BigInt,
        proof: Array<BigInt>
    ): BigInt {
        let result = super.call(
            "addMessage",
            "addMessage(string,uint256,uint256,bytes32,uint256,uint256,uint256[8]):(uint256)",
            [
                ethereum.Value.fromString(messageContent),
                ethereum.Value.fromUnsignedBigInt(groupId),
                ethereum.Value.fromUnsignedBigInt(merkleTreeRoot),
                ethereum.Value.fromFixedBytes(signal),
                ethereum.Value.fromUnsignedBigInt(nullifierHash),
                ethereum.Value.fromUnsignedBigInt(externalNullifier),
                ethereum.Value.fromUnsignedBigIntArray(proof)
            ]
        )

        return result[0].toBigInt()
    }

    try_addMessage(
        messageContent: string,
        groupId: BigInt,
        merkleTreeRoot: BigInt,
        signal: Bytes,
        nullifierHash: BigInt,
        externalNullifier: BigInt,
        proof: Array<BigInt>
    ): ethereum.CallResult<BigInt> {
        let result = super.tryCall(
            "addMessage",
            "addMessage(string,uint256,uint256,bytes32,uint256,uint256,uint256[8]):(uint256)",
            [
                ethereum.Value.fromString(messageContent),
                ethereum.Value.fromUnsignedBigInt(groupId),
                ethereum.Value.fromUnsignedBigInt(merkleTreeRoot),
                ethereum.Value.fromFixedBytes(signal),
                ethereum.Value.fromUnsignedBigInt(nullifierHash),
                ethereum.Value.fromUnsignedBigInt(externalNullifier),
                ethereum.Value.fromUnsignedBigIntArray(proof)
            ]
        )
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBigInt())
    }

    getRoleAdmin(role: Bytes): Bytes {
        let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
            ethereum.Value.fromFixedBytes(role)
        ])

        return result[0].toBytes()
    }

    try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
        let result = super.tryCall("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
            ethereum.Value.fromFixedBytes(role)
        ])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBytes())
    }

    hasRole(role: Bytes, account: Address): boolean {
        let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
            ethereum.Value.fromFixedBytes(role),
            ethereum.Value.fromAddress(account)
        ])

        return result[0].toBoolean()
    }

    try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
        let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
            ethereum.Value.fromFixedBytes(role),
            ethereum.Value.fromAddress(account)
        ])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBoolean())
    }

    replyToMessage(
        parentMessageId: BigInt,
        messageContent: string,
        groupId: BigInt,
        merkleTreeRoot: BigInt,
        signal: Bytes,
        nullifierHash: BigInt,
        externalNullifier: BigInt,
        proof: Array<BigInt>
    ): BigInt {
        let result = super.call(
            "replyToMessage",
            "replyToMessage(uint256,string,uint256,uint256,bytes32,uint256,uint256,uint256[8]):(uint256)",
            [
                ethereum.Value.fromUnsignedBigInt(parentMessageId),
                ethereum.Value.fromString(messageContent),
                ethereum.Value.fromUnsignedBigInt(groupId),
                ethereum.Value.fromUnsignedBigInt(merkleTreeRoot),
                ethereum.Value.fromFixedBytes(signal),
                ethereum.Value.fromUnsignedBigInt(nullifierHash),
                ethereum.Value.fromUnsignedBigInt(externalNullifier),
                ethereum.Value.fromUnsignedBigIntArray(proof)
            ]
        )

        return result[0].toBigInt()
    }

    try_replyToMessage(
        parentMessageId: BigInt,
        messageContent: string,
        groupId: BigInt,
        merkleTreeRoot: BigInt,
        signal: Bytes,
        nullifierHash: BigInt,
        externalNullifier: BigInt,
        proof: Array<BigInt>
    ): ethereum.CallResult<BigInt> {
        let result = super.tryCall(
            "replyToMessage",
            "replyToMessage(uint256,string,uint256,uint256,bytes32,uint256,uint256,uint256[8]):(uint256)",
            [
                ethereum.Value.fromUnsignedBigInt(parentMessageId),
                ethereum.Value.fromString(messageContent),
                ethereum.Value.fromUnsignedBigInt(groupId),
                ethereum.Value.fromUnsignedBigInt(merkleTreeRoot),
                ethereum.Value.fromFixedBytes(signal),
                ethereum.Value.fromUnsignedBigInt(nullifierHash),
                ethereum.Value.fromUnsignedBigInt(externalNullifier),
                ethereum.Value.fromUnsignedBigIntArray(proof)
            ]
        )
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBigInt())
    }

    semaContract(): Address {
        let result = super.call("semaContract", "semaContract():(address)", [])

        return result[0].toAddress()
    }

    try_semaContract(): ethereum.CallResult<Address> {
        let result = super.tryCall("semaContract", "semaContract():(address)", [])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toAddress())
    }

    supportsInterface(interfaceId: Bytes): boolean {
        let result = super.call("supportsInterface", "supportsInterface(bytes4):(bool)", [
            ethereum.Value.fromFixedBytes(interfaceId)
        ])

        return result[0].toBoolean()
    }

    try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
        let result = super.tryCall("supportsInterface", "supportsInterface(bytes4):(bool)", [
            ethereum.Value.fromFixedBytes(interfaceId)
        ])
        if (result.reverted) {
            return new ethereum.CallResult()
        }
        let value = result.value
        return ethereum.CallResult.fromValue(value[0].toBoolean())
    }
}

export class ConstructorCall extends ethereum.Call {
    get inputs(): ConstructorCall__Inputs {
        return new ConstructorCall__Inputs(this)
    }

    get outputs(): ConstructorCall__Outputs {
        return new ConstructorCall__Outputs(this)
    }
}

export class ConstructorCall__Inputs {
    _call: ConstructorCall

    constructor(call: ConstructorCall) {
        this._call = call
    }

    get semaContractAddr(): Address {
        return this._call.inputValues[0].value.toAddress()
    }
}

export class ConstructorCall__Outputs {
    _call: ConstructorCall

    constructor(call: ConstructorCall) {
        this._call = call
    }
}

export class AddAdminsCall extends ethereum.Call {
    get inputs(): AddAdminsCall__Inputs {
        return new AddAdminsCall__Inputs(this)
    }

    get outputs(): AddAdminsCall__Outputs {
        return new AddAdminsCall__Outputs(this)
    }
}

export class AddAdminsCall__Inputs {
    _call: AddAdminsCall

    constructor(call: AddAdminsCall) {
        this._call = call
    }

    get admins(): Array<Address> {
        return this._call.inputValues[0].value.toAddressArray()
    }
}

export class AddAdminsCall__Outputs {
    _call: AddAdminsCall

    constructor(call: AddAdminsCall) {
        this._call = call
    }
}

export class AddMemberCall extends ethereum.Call {
    get inputs(): AddMemberCall__Inputs {
        return new AddMemberCall__Inputs(this)
    }

    get outputs(): AddMemberCall__Outputs {
        return new AddMemberCall__Outputs(this)
    }
}

export class AddMemberCall__Inputs {
    _call: AddMemberCall

    constructor(call: AddMemberCall) {
        this._call = call
    }

    get groupId(): BigInt {
        return this._call.inputValues[0].value.toBigInt()
    }

    get identityCommitment(): BigInt {
        return this._call.inputValues[1].value.toBigInt()
    }
}

export class AddMemberCall__Outputs {
    _call: AddMemberCall

    constructor(call: AddMemberCall) {
        this._call = call
    }
}

export class AddMessageCall extends ethereum.Call {
    get inputs(): AddMessageCall__Inputs {
        return new AddMessageCall__Inputs(this)
    }

    get outputs(): AddMessageCall__Outputs {
        return new AddMessageCall__Outputs(this)
    }
}

export class AddMessageCall__Inputs {
    _call: AddMessageCall

    constructor(call: AddMessageCall) {
        this._call = call
    }

    get messageContent(): string {
        return this._call.inputValues[0].value.toString()
    }

    get groupId(): BigInt {
        return this._call.inputValues[1].value.toBigInt()
    }

    get merkleTreeRoot(): BigInt {
        return this._call.inputValues[2].value.toBigInt()
    }

    get signal(): Bytes {
        return this._call.inputValues[3].value.toBytes()
    }

    get nullifierHash(): BigInt {
        return this._call.inputValues[4].value.toBigInt()
    }

    get externalNullifier(): BigInt {
        return this._call.inputValues[5].value.toBigInt()
    }

    get proof(): Array<BigInt> {
        return this._call.inputValues[6].value.toBigIntArray()
    }
}

export class AddMessageCall__Outputs {
    _call: AddMessageCall

    constructor(call: AddMessageCall) {
        this._call = call
    }

    get value0(): BigInt {
        return this._call.outputValues[0].value.toBigInt()
    }
}

export class AddReviewersCall extends ethereum.Call {
    get inputs(): AddReviewersCall__Inputs {
        return new AddReviewersCall__Inputs(this)
    }

    get outputs(): AddReviewersCall__Outputs {
        return new AddReviewersCall__Outputs(this)
    }
}

export class AddReviewersCall__Inputs {
    _call: AddReviewersCall

    constructor(call: AddReviewersCall) {
        this._call = call
    }

    get reviewers(): Array<Address> {
        return this._call.inputValues[0].value.toAddressArray()
    }
}

export class AddReviewersCall__Outputs {
    _call: AddReviewersCall

    constructor(call: AddReviewersCall) {
        this._call = call
    }
}

export class AddViolationCall extends ethereum.Call {
    get inputs(): AddViolationCall__Inputs {
        return new AddViolationCall__Inputs(this)
    }

    get outputs(): AddViolationCall__Outputs {
        return new AddViolationCall__Outputs(this)
    }
}

export class AddViolationCall__Inputs {
    _call: AddViolationCall

    constructor(call: AddViolationCall) {
        this._call = call
    }

    get messageId(): BigInt {
        return this._call.inputValues[0].value.toBigInt()
    }
}

export class AddViolationCall__Outputs {
    _call: AddViolationCall

    constructor(call: AddViolationCall) {
        this._call = call
    }
}

export class GrantRoleCall extends ethereum.Call {
    get inputs(): GrantRoleCall__Inputs {
        return new GrantRoleCall__Inputs(this)
    }

    get outputs(): GrantRoleCall__Outputs {
        return new GrantRoleCall__Outputs(this)
    }
}

export class GrantRoleCall__Inputs {
    _call: GrantRoleCall

    constructor(call: GrantRoleCall) {
        this._call = call
    }

    get role(): Bytes {
        return this._call.inputValues[0].value.toBytes()
    }

    get account(): Address {
        return this._call.inputValues[1].value.toAddress()
    }
}

export class GrantRoleCall__Outputs {
    _call: GrantRoleCall

    constructor(call: GrantRoleCall) {
        this._call = call
    }
}

export class RemoveAdminsCall extends ethereum.Call {
    get inputs(): RemoveAdminsCall__Inputs {
        return new RemoveAdminsCall__Inputs(this)
    }

    get outputs(): RemoveAdminsCall__Outputs {
        return new RemoveAdminsCall__Outputs(this)
    }
}

export class RemoveAdminsCall__Inputs {
    _call: RemoveAdminsCall

    constructor(call: RemoveAdminsCall) {
        this._call = call
    }

    get admins(): Array<Address> {
        return this._call.inputValues[0].value.toAddressArray()
    }
}

export class RemoveAdminsCall__Outputs {
    _call: RemoveAdminsCall

    constructor(call: RemoveAdminsCall) {
        this._call = call
    }
}

export class RemoveReviewersCall extends ethereum.Call {
    get inputs(): RemoveReviewersCall__Inputs {
        return new RemoveReviewersCall__Inputs(this)
    }

    get outputs(): RemoveReviewersCall__Outputs {
        return new RemoveReviewersCall__Outputs(this)
    }
}

export class RemoveReviewersCall__Inputs {
    _call: RemoveReviewersCall

    constructor(call: RemoveReviewersCall) {
        this._call = call
    }

    get reviewers(): Array<Address> {
        return this._call.inputValues[0].value.toAddressArray()
    }
}

export class RemoveReviewersCall__Outputs {
    _call: RemoveReviewersCall

    constructor(call: RemoveReviewersCall) {
        this._call = call
    }
}

export class RenounceRoleCall extends ethereum.Call {
    get inputs(): RenounceRoleCall__Inputs {
        return new RenounceRoleCall__Inputs(this)
    }

    get outputs(): RenounceRoleCall__Outputs {
        return new RenounceRoleCall__Outputs(this)
    }
}

export class RenounceRoleCall__Inputs {
    _call: RenounceRoleCall

    constructor(call: RenounceRoleCall) {
        this._call = call
    }

    get role(): Bytes {
        return this._call.inputValues[0].value.toBytes()
    }

    get account(): Address {
        return this._call.inputValues[1].value.toAddress()
    }
}

export class RenounceRoleCall__Outputs {
    _call: RenounceRoleCall

    constructor(call: RenounceRoleCall) {
        this._call = call
    }
}

export class ReplyToMessageCall extends ethereum.Call {
    get inputs(): ReplyToMessageCall__Inputs {
        return new ReplyToMessageCall__Inputs(this)
    }

    get outputs(): ReplyToMessageCall__Outputs {
        return new ReplyToMessageCall__Outputs(this)
    }
}

export class ReplyToMessageCall__Inputs {
    _call: ReplyToMessageCall

    constructor(call: ReplyToMessageCall) {
        this._call = call
    }

    get parentMessageId(): BigInt {
        return this._call.inputValues[0].value.toBigInt()
    }

    get messageContent(): string {
        return this._call.inputValues[1].value.toString()
    }

    get groupId(): BigInt {
        return this._call.inputValues[2].value.toBigInt()
    }

    get merkleTreeRoot(): BigInt {
        return this._call.inputValues[3].value.toBigInt()
    }

    get signal(): Bytes {
        return this._call.inputValues[4].value.toBytes()
    }

    get nullifierHash(): BigInt {
        return this._call.inputValues[5].value.toBigInt()
    }

    get externalNullifier(): BigInt {
        return this._call.inputValues[6].value.toBigInt()
    }

    get proof(): Array<BigInt> {
        return this._call.inputValues[7].value.toBigIntArray()
    }
}

export class ReplyToMessageCall__Outputs {
    _call: ReplyToMessageCall

    constructor(call: ReplyToMessageCall) {
        this._call = call
    }

    get value0(): BigInt {
        return this._call.outputValues[0].value.toBigInt()
    }
}

export class RevokeRoleCall extends ethereum.Call {
    get inputs(): RevokeRoleCall__Inputs {
        return new RevokeRoleCall__Inputs(this)
    }

    get outputs(): RevokeRoleCall__Outputs {
        return new RevokeRoleCall__Outputs(this)
    }
}

export class RevokeRoleCall__Inputs {
    _call: RevokeRoleCall

    constructor(call: RevokeRoleCall) {
        this._call = call
    }

    get role(): Bytes {
        return this._call.inputValues[0].value.toBytes()
    }

    get account(): Address {
        return this._call.inputValues[1].value.toAddress()
    }
}

export class RevokeRoleCall__Outputs {
    _call: RevokeRoleCall

    constructor(call: RevokeRoleCall) {
        this._call = call
    }
}

export class UpdateSemaphoreGroupAdminCall extends ethereum.Call {
    get inputs(): UpdateSemaphoreGroupAdminCall__Inputs {
        return new UpdateSemaphoreGroupAdminCall__Inputs(this)
    }

    get outputs(): UpdateSemaphoreGroupAdminCall__Outputs {
        return new UpdateSemaphoreGroupAdminCall__Outputs(this)
    }
}

export class UpdateSemaphoreGroupAdminCall__Inputs {
    _call: UpdateSemaphoreGroupAdminCall

    constructor(call: UpdateSemaphoreGroupAdminCall) {
        this._call = call
    }

    get groupId(): BigInt {
        return this._call.inputValues[0].value.toBigInt()
    }

    get newAdmin(): Address {
        return this._call.inputValues[1].value.toAddress()
    }
}

export class UpdateSemaphoreGroupAdminCall__Outputs {
    _call: UpdateSemaphoreGroupAdminCall

    constructor(call: UpdateSemaphoreGroupAdminCall) {
        this._call = call
    }
}
